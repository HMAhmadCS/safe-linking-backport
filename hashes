#!/bin/zsh

# Arrays for branches and their corresponding commit hashes
branches=( "glibc-2.26" "glibc-2.27" "glibc-2.28" "glibc-2.29" "glibc-2.30")
hashes=("6436141dbab805b3973c0636933e455618444240" "a9be626fd646796f2b2f270f9ed6831e34d3bdff" "62f74b55e819452d7937c8692f9887214bef7018" "62006bc94b321709a60ff7351696b7b9aeaefe6b" "580539e22d9bbebffb51f4450d8753d10deffa82")

# Checkout main to start fresh
git checkout main

# Loop through branches and hashes
for i in {1..${#branches[@]}}; do
  index=$((i - 1))
  branch=${branches[$index]}
  commit_hash=${hashes[$index]}

  echo "⚙️ Processing $branch from $commit_hash..."

  # Create temporary branch from specific commit
  git checkout -b temp-$branch $commit_hash || { echo "❌ Failed to checkout $commit_hash"; exit 1; }

  folder_name="$branch"
  if [ ! -d "$folder_name" ]; then
    mkdir "$folder_name"
  fi

  # Move all files (skip the folder itself, .git, ., ..)
  for item in * .[^.]*; do
    if [[ "$item" != "$folder_name" && "$item" != ".git" && "$item" != "." && "$item" != ".." ]]; then
      git mv "$item" "$folder_name/" 2>/dev/null || mv "$item" "$folder_name/"
    fi
  done

  git commit -am "Move $branch files into $folder_name/"

  # Create clean orphan branch
  git checkout --orphan "$branch-clean"
  git rm -rf .
  git checkout temp-$branch -- "$folder_name"
  git commit -m "Clean $branch with only version files"


git checkout main

  # Cleanup
  git branch -D temp-$branch
done

echo "✅ All branches cleaned and organized!"

